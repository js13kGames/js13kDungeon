"use strict";function listRooms(){return games.map(function(e){return e.toJSON()})}function findByDungeonId(e){for(var t=0;t<games.length;t++)for(var a=0;a<games[t].dungeons.length;a++)if(games[t].dungeons[a].id===e)return games[t]}function Dungeon(e,t){this.socket=e,this.id=this.socket.id,this.area=[],this.life=100,this.money=100,t=t||{},this.config={trapFeedback:t.trapFeedback||3,trapCost:t.trapCost||15,wallCost:t.wallCost||5},this.init()}var games=[],squareStates={p:"square player",0:"square"};Dungeon.prototype={init:function(){var e=this;this.createArea(),this.socket.on("new-game",function(){var t=new Game(e.socket,!0);games.push(t);var a=find(games,e.socket.id);a.addDungeon(e),e.socket.emit("game-created",a.toJSON())}),this.socket.on("list-games",function(){e.socket.emit("room-list",listRooms())}),this.socket.on("disconnect",function(){var t=find(games,e.socket.id);e&&(t=t||findByDungeonId(e.socket.id)),t&&(t.dungeons.length<=1&&remove(games,t),t.removeDungeon(e.socket.id),t.broadcast("update",t.toJSON())),console.log("Disconnected: "+e.socket.id)}),this.socket.on("join-game",function(t){var a=find(games,t);a&&e.joinRoom(a)}),this.socket.on("move-player",function(t){e.movePlayer(t);var a=findByDungeonId(e.id);a.broadcast("update",a.toJSON())}),this.socket.on("apply-option",function(e){var t=findByDungeonId(e.dungeonId),a=find(t.dungeons,e.dungeonId),s=find(t.dungeons,e.opponentId);s.id!==a.id&&s.deduceMoney(e.x,e.y,e.option.trim(),a),a.applyOption(e.x,e.y,e.option.trim(),s),t.broadcast("update",t.toJSON())})},applyOption:function(e,t,a,s){switch(a){case"wall":"square"===this.area[e][t].state&&s.money>=this.config.wallCost&&this.id!==s.id&&(this.area[e][t].state+=" wall");break;case"trap":this.area[e][t].state.includes("player")&&s.money>=this.config.trapCost&&this.id!==s.id&&(this.player.trapped=!0,this.area[e][t].state+=" trap")}},deduceMoney:function(e,t,a,s){var i=0;switch(a){case"wall":"square"===s.area[e][t].state&&this.money>=this.config.wallCost&&(i+=this.config.wallCost);break;case"trap":s.area[e][t].state.includes("player")&&!s.area[e][t].state.includes("trap")&&this.money>=this.config.trapCost&&(i+=this.config.trapCost)}this.money-=i},movePlayer:function(e){var t=0,a=this.player.y,s=this.player.x;switch(e){case"up":t+=a-1>=0?1:0,t>0&&(this.area[a-t][s].state.includes("wall")||(this.area[a-t][s].state="square player",this.area[a][s].state="square",this.player.y-=t,this.life--));break;case"down":t+=a+1<this.area.length?1:0,t>0&&(this.area[a+t][s].state.includes("wall")||(this.area[a+t][s].state="square player",this.area[a][s].state="square",this.player.y+=t,this.life--));break;case"left":t+=s-1>=0?1:0,t>0&&(this.area[a][s-t].state.includes("wall")||(this.area[a][s-t].state="square player",this.area[a][s].state="square",this.player.x-=t,this.life--));break;case"right":t+=s+1<this.area[0].length?1:0,t>0&&(this.area[a][s+t].state.includes("wall")||(this.area[a][s+t].state="square player",this.area[a][s].state="square",this.player.x+=t,this.life--))}this.applyTrap(e)},applyTrap:function(e){if(this.player.trapped){for(var t=0;t<=this.config.trapFeedback;t++){var a=0,s=this.player.y,i=this.player.x;switch(e){case"up":a+=s+1<this.area.length?1:0,a>0&&(this.area[s+a][i].state.includes("wall")||(this.area[s+a][i].state="square player",this.area[s][i].state="square",this.player.y+=a));break;case"down":a+=s-1>=0?1:0,a>0&&(this.area[s-a][i].state.includes("wall")||(this.area[s-a][i].state="square player",this.area[s][i].state="square",this.player.y-=a));break;case"left":a+=i+1<this.area[0].length?1:0,a>0&&(this.area[s][i+a].state.includes("wall")||(this.area[s][i+a].state="square player",this.area[s][i].state="square",this.player.x+=a));break;case"right":a+=i-1>=0?1:0,a>0&&(this.area[s][i-a].state.includes("wall")||(this.area[s][i-a].state="square player",this.area[s][i].state="square",this.player.x-=a))}}this.player.trapped=!1}},toJSON:function(){return{id:this.id,area:this.area,life:this.life,money:this.money,player:this.player}},createArea:function(e,t,a){e=e||300,t=t||400,a=a||30;for(var s=e/a,i=Math.floor(t/s),r=0;r<i;r++){this.area.push([]);for(var n=a;n>0;n--)this.area[r].push({style:{width:s-1+"px",height:s-1+"px"},state:squareStates[0]})}this.player={x:Math.ceil(a/2),y:0,trapped:!1},this.area[this.player.y][this.player.x].state=squareStates.p},joinRoom:function(e){this.socket.join(e.id),e.addDungeon(this),e.broadcast("update",e.toJSON()),console.log(this.socket.id+" has joined: "+e.id)}},module.exports=function(e){new Dungeon(e);console.log("Connected: "+e.id)};