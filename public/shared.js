"use strict";function remove(n,o){n.splice(n.indexOf(o),1)}function find(n,o){for(var e=0;e<n.length;e++)if(n[e].id===o)return n[e]}function Game(n){this.room=n,this.id=this.room.id,this.dungeons=[]}Game.prototype={removeDungeon:function(n){var o=find(this.dungeons,n);if(o)var e=this.dungeons.indexOf(o);e>=0&&this.dungeons.splice(e,1),console.log(o),console.log(e)},addDungeon:function(n){find(this.dungeons,n.id)?console.warn(n.id+"already exist in thsi game"):this.dungeons.push(n)},updateGame:function(n){this.updateDungeons(n.dungeons)},updateDungeons:function(n){function o(){var t=n[i],s=e.dungeons.indexOf(t),d=e.dungeons[i];d&&t&&d.id===t.id?(d.area=t.area,d.life=t.life,d.money=t.money):!d&&t?e.dungeons.push(t):d&&!t&&e.dungeons.splice(s,1),--i<=0||(i>=n.length||i>=e.dungeons.length)&&o()}var e=this,i=Math.max(Math.max(e.dungeons.length-1,n.length-1),0);o()},broadcast:function(n,o){this.room.broadcast.to(this.room.id).emit(n,o),this.room.emit(n,o)},toJSON:function(){return{id:this.id,dungeons:this.dungeons.map(function(n){return n.toJSON()})}}};